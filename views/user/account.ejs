<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Account Settings - Bootdey.com</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script>

  <style type="text/css">
    body {
      background: #f5f5f5;
      margin-top: 20px;
      margin-bottom: 60px; /* Add this margin to create space for the fixed footer */
    }

    .ui-w-80 {
      width: 80px !important;
      height: auto;
    }

    /* Add your custom styles here */

    .header {
      background-color: #333;
      color: #fff;
      padding: 10px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .header-user-info {
      display: flex;
      align-items: center;
    }

    .header-user-info span {
      margin-right: 10px;
    }

    .header-logout-link {
      color: #fff;
      text-decoration: underline;
      cursor: pointer;
    }

    .footer {
      background-color: #333;
      color: #fff;
      padding: 10px;
      text-align: center;
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
    }

    .account-settings-fileinput {
      position: absolute;
      visibility: hidden;
      width: 1px;
      height: 1px;
      opacity: 0;
    }

    .account-settings-links .list-group-item.active {
      font-weight: bold !important;
    }

    /* Add your other styles here */

    .account-settings-multiselect ~ .select2-container {
      width: 100% !important;
    }
    

    /* Add other styles if needed */

  </style>
</head>

<body>
  <div class="header">
    <h4>Account Settings</h4>
    <a href="/" class="text-white">Home</a>
    <div class="header-user-info">
      <span>Welcome, <%= data.name %></span>
      <a class="header-logout-link" href="/logout">Logout</a>
    </div>
  </div>

  <div class="container light-style flex-grow-1 container-p-y">
    <div class="card overflow-hidden">
      <% if (messages.success) { %>
      <div id="success-message" class="alert alert-success">
        <%= messages.success %>
      </div>
      <% } %>

      <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
      <script>
        $(document).ready(function() {
          setTimeout(function() {
            $("#success-message").fadeOut("slow");
          }, 1000);
        });
      </script>

      <div class="row no-gutters row-bordered row-border-light">
        <div class="col-md-3 pt-0">
          <div class="list-group list-group-flush account-settings-links">
            <a class="list-group-item list-group-item-action active" data-toggle="list" href="#account-general">General</a>
            <a class="list-group-item list-group-item-action" data-toggle="list" href="#account-change-password">Change password</a>
            <a class="list-group-item list-group-item-action" data-toggle="list" href="#account-info">Address</a>
            <a class="list-group-item list-group-item-action" data-toggle="list" href="#account-connections">Order</a>
            <a class="list-group-item list-group-item-action" data-toggle="list" href="#account-notifications">Wallet</a>
          </div>
        </div>

        <div class="col-md-9">
          <div class="tab-content">
            <div class="tab-pane fade active show" id="account-general">
              <hr class="border-light m-0">
              <div class="card-body">
                <form action="/update-profile" method="post">
                  <div class="form-group">
                    <label class="form-label">Username</label>
                    <input type="text" class="form-control mb-1" name="name" value="<%= data.name %>" required>
                    <input type="hidden" name="id" value="<%= data._id %>">
                  </div>
                  <div class="form-group">
                    <label class="form-label">E-mail</label>
                    <input type="email" class="form-control" name="email" value="<%= data.email %>" required>
                  </div>
                  <div class="form-group">
                    <label class="form-label">Contact No</label>
                    <input type="number" class="form-control mb-1" name="number" value="<%= data.number %>">
                  </div>
                  <div class="text-right mt-3">
                    <button type="submit" class="btn btn-primary">Save changes</button>&nbsp;
                  </div>
                </form>
              </div>
            </div>

            <!-- Add this section at the top of the file to display flash messages -->
            <% if (messages && messages.length > 0) { %>
            <div class="alert alert-info" id="success-messag">
              <% messages.forEach(message => { %>
              <p><%= message %></p>
              <% }) %>
            </div>
            <% } %>
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script>
              $(document).ready(function() {
                setTimeout(function() {
                  $("#success-messag").fadeOut("slow");
                }, 1000);
              });
            </script>

            <div class="tab-pane fade" id="account-change-password">
              <div class="card-body pb-2">
                <form action="/change-password" method="post"> <!-- Add the action attribute and method -->
                  <div class="form-group">
                    <label class="form-label">Current password</label>
                    <input type="password" class="form-control" name="currentPassword" required> <!-- Add the name attribute for form data -->
                  </div>
                  <div class="form-group">
                    <label class="form-label">New password</label>
                    <input type="password" class="form-control" name="newPassword" required> <!-- Add the name attribute for form data -->
                  </div>
                  <div class="form-group">
                    <label class="form-label">Repeat new password</label>
                    <input type="password" class="form-control" name="repeatNewPassword" required> <!-- Add the name attribute for form data -->
                  </div>
                  <button type="submit" class="btn btn-primary">Submit</button> <!-- Add a submit button -->
                </form>
              </div>
            </div>

            <div class="tab-pane fade" id="account-info">
              <div class="card-body">
                <% if (address && address.length > 0) { %>
                <% address.forEach((addr, index) => { %>
                  <div class="form-group address-container">
                    <p><%= addr.name %></p>
                    <p><%= addr.housenumber %>, <%= addr.street %>, <%= addr.state %></p>
                    <p><%= addr.phone %></p>
                    <p><%= addr.postcode %></p>
                    <div class="actions">
                        <button class="btn-add-to-cart btn btn-primary d-inline-block" data-toggle="modal"
                            data-target="#editAddressModal-<%= index %>">
                            <i class="fa fa-edit"></i> Edit Address
                        </button>
                    </div>
                </div>
                

                <!-- modal of edit address -->
                <div class="modal fade" id="editAddressModal-<%= index %>" tabindex="-1" role="dialog" aria-labelledby="editAddressModalLabel-<%= index %>" aria-hidden="true">
                  <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="editAddressModalLabel-<%= index %>">Edit Address</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body">
                        <form action="/profile/editaddress/<%= addr._id %>" method="post" class="checkout_form">
                          <div class="row">
                            <div class="col-lg-12">
                              <div class="checkout_form_input">
                                <p>Full Name <span>*</span></p>
                                <input type="text" name="fullName" value="<%= addr.name %>" required>
                              </div>
                              <div class="checkout_form_input">
                                <p>House No./Building No. <span>*</span></p>
                                <input type="text" name="houseNo" value="<%= addr.housenumber %>" required>
                              </div>
                              <div class="checkout_form_input">
                                <p>State <span>*</span></p>
                                <input type="text" name="state" value="<%= addr.state %>" required>
                              </div>
                              <div class="checkout_form_input">
                                <p>City <span>*</span></p>
                                <input type="text" name="street" value="<%= addr.street %>" required>
                              </div>
                              <div class="checkout_form_input">
                                <p>Pin <span>*</span></p>
                                <input type="tel" name="zip" value="<%= addr.postcode %>" required>
                              </div>
                              <div class="checkout_form_input">
                                <p>Phone <span>*</span></p>
                                <input type="tel" name="mobileNumber" value="<%= addr.phone %>" required>
                              </div>
                            </div>
                          </div>
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                      </div>
                      </form>
                    </div>
                  </div>
                </div>
                <% }) %>
                <% } %>
              </div>
            </div>

           <!-- ... Previous code ... -->

           <div class="tab-pane fade" id="account-connections">
            <div class="card-body">
              <table class="table table-bordered">
                <thead>
                  <tr>
                    <th class="text-center">No</th>
                 
                    <th class="text-center">Date</th>
                    <th class="text-center">Payment Mode</th>
                    <th class="text-center">Total Amount</th>
                    <th class="text-center">Action</th>
                    <th class="text-center">View</th>
                    <th class="text-center">Status/Invoice</th>
                    <th class="text-center">Product Review</th> <!-- Add this column header -->
                  </tr>
                </thead>
                <tbody>
                  <% order.forEach(function(order, index) { %>
                    <tr>
                      <td class="text-center"><%= index + 1 %></td>
                      <td class="truncate text-center"><%= order.createdAt %></td>
                      <td class="text-center"><%= order.paymentMethod %></td>
                      <td class="text-center"><%= order.total %></td>
                      <td class="text-center">
                        <% if (order.status === "pending") { %>
                          <button id="cancelButton<%= index %>" type="button" class="btn btn-danger" onclick="showCancelConfirmationModal('<%= order._id %>', <%= index %>)">Cancel</button>
                        <% } else if (order.status === "completed") { %>
                          <% const now = new Date(); %>
                          <% const orderStatusTime = new Date(order.orderStatusTime); %>
                          <% const timeLimit = 60 * 60 * 1000; // 1 hour in milliseconds %>
                          <% const timeDifference = now - orderStatusTime; %>
                          <% if (timeDifference > timeLimit) { %>
                            <button class="btn btn-warning" disabled>Return</button>
                          <% } else { %>
                            <button class="btn btn-warning" onclick="showReturnConfirmationModal('<%= order._id %>')">Return</button>
                          <% } %>
                        <% } %>
                      </td>
                      
                      
                      <td class="text-center">
                        <button type="button" class="btn btn-primary" onclick="viewOrderDetails('<%= order._id %>')">View</button>
                      </td>
                      <td class="text-center" id="statusCell<%= index %>">
                        <!-- The order status will be displayed here -->
                        <%= order.status %>
                        <button type="button" class="btn btn-link " onclick="downloadInvoice('<%= order._id %>')">Download</button>
                      </td>
                      <td> <!-- Add this cell to display product review -->
                        <button class="btn btn-secondary" onclick="showProductReviewModal('<%= order._id %>')">Review</button>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
                
                
              </table>
            </div>
          </div>
          
<!-- ... Other code ... -->
<!-- Add this modal for confirmation -->
<div class="modal fade" id="returnConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="returnConfirmationModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="returnConfirmationModalLabel">Return Order</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to return this order?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">No, Keep Order</button>
        <button type="button" class="btn btn-primary" id="confirmReturnButton">Yes, Return Order</button>
      </div>
    </div>
  </div>
</div>
<script>
  function updateReturnButtonState(orderId, orderStatusTime) {
    const now = new Date();
    const timeLimit = 60 * 60 * 1000; // 1 hour in milliseconds
    const timeDifference = now - new Date(orderStatusTime);
    const returnButton = document.querySelector(`#returnButton_${orderId}`);

    if (returnButton) {
      if (timeDifference > timeLimit) {
        returnButton.setAttribute("disabled", "disabled");
      } else {
        returnButton.removeAttribute("disabled");
      }
    }
  }

  // Call the function for each order when the page loads
  document.addEventListener("DOMContentLoaded", function () {
    <% order.reverse().forEach(function(order, index) { %>
      <% if (order.status === 'completed') { %>
        updateReturnButtonState('<%= order._id %>', '<%= order.orderStatusTime %>');
      <% } %>
    <% }) %>
  });
</script>



<!-- Add this modal for confirmation -->
<div class="modal fade" id="cancelConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="cancelConfirmationModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cancelConfirmationModalLabel">Cancel Order</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to cancel this order?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">No, Keep Order</button>
        <button type="button" class="btn btn-primary" id="confirmCancelButton">Yes, Cancel Order</button>
      </div>
    </div>
  </div>
</div>
<!-- Add Product Review Modal -->


<!-- ... Previous code ... -->

<!-- Add Product Review Modal -->
<div class="modal fade" id="addProductReviewModal" tabindex="-1" role="dialog" aria-labelledby="addProductReviewModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addProductReviewModalLabel">Product Review</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Add the form for adding product review here -->
        <form id="productReviewForm">
          <div class="form-group">
            <label for="productNameDropdown">Select Product:</label>
            <select class="form-control" id="productNameDropdown" required>
              <!-- Product names will be populated here dynamically -->
            </select>
          </div>
          <div class="form-group">
            <label for="ratingInput">Rating:</label>
            <input type="number" class="form-control" id="ratingInput" min="1" max="5" value="" required>
          </div>
          <div class="form-group">
            <label for="commentTextarea">Comment:</label>
            <textarea class="form-control" id="commentTextarea" rows="3" value=""  required></textarea>
          </div>
          <input type="hidden" id="orderId">
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onclick="submitProductReview()">Submit</button>
      </div>
    </div>
  </div>
</div>
<!-- ... Previous code ... -->




<script>
  // JavaScript function to show the product review modal
  function showProductReviewModal(orderId) {
    // Set the orderId in the hidden field of the form
    document.getElementById("orderId").value = orderId;

    // Show the modal
    $("#addProductReviewModal").modal("show");
  }
  function showProductReviewModal(orderId) {
  // Fetch the ordered products based on the orderId

 
    // Reset the form fields before showing the modal
    document.getElementById("productNameDropdown").value = "";
    document.getElementById("ratingInput").value = "";
    document.getElementById("commentTextarea").value = "";
  $.ajax({
    url: `/ordered-products/${orderId}`, // Replace with the correct server-side route
    type: 'GET',
    dataType: 'json',
    success: function (response) {
      if (response.success) {
        const productNameDropdown = document.getElementById('productNameDropdown');
        productNameDropdown.innerHTML = ''; // Clear previous options

        // Loop through the products and add them to the dropdown
        response.products.forEach(product => {
          const option = document.createElement('option');
          option.value = product._id;
          option.textContent = product.productName;
          productNameDropdown.appendChild(option);
        });

        // Show the modal
        $('#addProductReviewModal').modal('show');
      } else {
        console.log('Error fetching ordered products');
      }
    },
    error: function (error) {
      console.log(error);
    },
  });
}


  // JavaScript function to submit the product review
  function submitProductReview() {
    const orderId = document.getElementById("orderId").value;
    const productName = document.getElementById("productNameDropdown").value;
    const rating = document.getElementById("ratingInput").value;
    const comment = document.getElementById("commentTextarea").value;

    // You can now use AJAX to send the product review data to the server
    // and save it in the productschema reviews array
    // For simplicity, let's assume the server route for submitting the review is /submit-product-review
    // Replace this with the actual route in your server code

    $.ajax({
      url: "/submit-product-review", // Replace with the actual route
      type: "POST",
      dataType: "json",
      data: {
        orderId: orderId,
        productName: productName,
        rating: rating,
        comment: comment
      },
      success: function (response) {
        if (response.success) {
          // Handle success, e.g., show a success message to the user
          alert("Product review submitted successfully!");
          // Close the modal after successful submission
          $("#addProductReviewModal").modal("hide");
        } else {
          // Handle error if needed
          alert("Failed to submit product review. Please try again later.");
        }
      },
      error: function (error) {
        console.log(error);
        alert("An error occurred while submitting the product review.");
      }
    });
  }
</script>





<script>
  // JavaScript function to show the cancel confirmation modal
  function showCancelConfirmationModal(orderId, index) {
    const modal = $("#cancelConfirmationModal");
    modal.modal("show");

    // Handle the click event of the confirm cancel button
    $("#confirmCancelButton").click(function() {
      // Call the cancelOrder function here
      cancelOrder(orderId, index);

      // Close the modal after confirmation
      modal.modal("hide");
    });
  }
</script>


<div class="tab-pane fade" id="account-notifications">
  <!-- Your notifications content goes here -->

  <!-- Start Wallet Amount Box -->
  <div class="wallet-amount-box">
    <h4>Wallet Balance</h4>
    <div class="wallet-amount">Rs. <span id="walletAmount">0.00</span></div>
  </div>
  <!-- End Wallet Amount Box -->

  <!-- Start Wallet Amount History Table -->
  <div class="wallet-history">
    <h4>Wallet Amount History</h4>
    <table class="table">
      <thead>
        <tr>
          <th>Date</th>
          <th>Amount</th>
        </tr>
      </thead>
      <tbody id="walletHistoryTableBody">
        <!-- Wallet amount history rows will be added here dynamically -->
      </tbody>
    </table>
  </div>
  <!-- End Wallet Amount History Table -->
</div>



          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="footer">
    <div class="footer__copyright__text">
      <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
      Copyright &copy;
      <script>
        document.write(new Date().getFullYear());
      </script> All rights reserved <i class="fa fa-heart" aria-hidden="true"></i>
    </div>
  </div>
  

  <div class="modal fade" id="orderDetailsModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
          <div id="orderDetailsSection"></div>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body" id="orderDetailsContent">
          <!-- Order details will be displayed here -->
          <div id="print-content">
          <div class="row">
            <div class="col-md-6">
              <h5>Order Information</h5>
              <p id="orderDetailsOrderId"></p>
              <p id="orderDetailsDate"></p>
              <p id="orderDetailsPaymentMode"></p>
              <p id="orderDetailsTotalAmount"></p>
            </div>
            <div class="col-md-6">
              <h5>Products</h5>
              <div id="orderDetailsProducts">
                <!-- Product details will be displayed here -->
             
                
              </div>
            
            </div>
          </div>
        </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <!-- Add the Print/Copy button -->
          <button type="button" class="btn btn-primary" onclick="printPage()">Download </button>
         

        </div>
        
      
        
      </div>
    </div>
  </div>
  <script>
   function viewOrderDetails(orderId) {
  $.ajax({
    url: `/order-details/${orderId}`,
    type: "GET",
    dataType: "json",
    success: function (response) {
      if (response.success) {
        // Populate the modal with order details
        const orderDetailsOrderId = document.getElementById("orderDetailsOrderId");
        const orderDetailsDate = document.getElementById("orderDetailsDate");
        const orderDetailsPaymentMode = document.getElementById("orderDetailsPaymentMode");
        const orderDetailsTotalAmount = document.getElementById("orderDetailsTotalAmount");
        const orderDetailsProducts = document.getElementById("orderDetailsProducts");

        orderDetailsOrderId.innerText = `Order ID: ${response.order._id}`;
       // Convert the date string to a Date object
const orderDate = new Date(response.order.createdAt);

// Format the date as "YYYY-MM-DD HH:mm:ss"
const formattedDate = orderDate.toLocaleString('en-US', {
  year: 'numeric',
  month: '2-digit',
  day: '2-digit',
  hour: '2-digit',
  minute: '2-digit',
  second: '2-digit'
});

// Now you can use the formatted date
orderDetailsDate.innerText = `Date: ${formattedDate}`;

        orderDetailsPaymentMode.innerText = `Payment Mode: ${response.order.paymentMethod}`;
        orderDetailsTotalAmount.innerText = `Total Amount: ${response.order.total}`;

        // Clear previous product details
        orderDetailsProducts.innerHTML = "";

        // Iterate over products and display their information
        response.order.items.forEach((item, index) => {
  const productDetails = `
    <div class="row">
      <div class="col-md-3">
        <img src="/productImages/${item.product.image[index]}" alt="${item.product.productname}" class="img-fluid">
      </div>
      <div class="col-md-9">
        <p>Name: ${item.product.productname}</p>
        <p>Quantity: ${item.quantity}</p>
      </div>
    </div>
    <hr>
  `;
  orderDetailsProducts.insertAdjacentHTML("beforeend", productDetails);
});


        // Show the modal
        $("#orderDetailsModal").modal("show");
        
        
      } else {
        // Handle error if needed
        console.log("Error fetching order details");
      }
    },
    error: function (error) {
      console.log(error);
    },
  });
}


function cancelOrder(orderId, index) {
  $.ajax({
    url: `/cancel-order/${orderId}`,
    type: "PUT",
    dataType: "json",
    success: function (response) {
      if (response.success) {
        // Update the order status to "Cancelled" in the table
        document.getElementById('statusCell' + index).innerText = "cancelled";
        window.location.reload()
        // Remove the "Cancel" button for the order
        document.getElementById('cancelButton' + index).remove()

        // Update the wallet amount in the UI (assuming you have an element with id="walletAmount" to display the wallet amount)
        const walletAmountElement = document.getElementById('walletAmount');
        const currentWalletAmount = parseFloat(walletAmountElement.innerText);
        const orderTotal = parseFloat(response.updatedOrder.total);
        const newWalletAmount = currentWalletAmount + orderTotal;
        walletAmountElement.innerText = newWalletAmount.toFixed(2);
      // Update the displayed wallet amount with 2 decimal places
      } else {
        // Handle error if needed
        console.log("Error cancelling order");
      }
    },
    error: function (error) {
      console.log(error);
    },
  });
}




  </script>

<!-- return product -->
<script>
  // JavaScript function to show the return confirmation modal
  function showReturnConfirmationModal(orderId) {
    const modal = $("#returnConfirmationModal");
    modal.modal("show");

    // Handle the click event of the confirm return button
    $("#confirmReturnButton").click(function() {
      // Call the returnOrder function here
      returnOrder(orderId);
     

      // Close the modal after confirmation
      modal.modal("hide");
    });
  }

  // JavaScript function to return the order
  function returnOrder(orderId) {
    $.ajax({
      url: `/return-order/${orderId}`,
      type: "PUT",
      dataType: "json",
      success: function (response) {
        if (response.success) {
          window.location.reload()
          // Update the order status in the table
          document.getElementById('statusCell' + index).innerText = "returned";
          window.location.reload()
          // Remove the "Return" button for the order
          document.getElementById('returnButton' + index).remove();
         

          // Update the wallet amount in the UI (assuming you have an element with id="walletAmount" to display the wallet amount)
          const walletAmountElement = document.getElementById('walletAmount');
          const currentWalletAmount = parseFloat(walletAmountElement.innerText);
          const orderTotal = parseFloat(response.updatedOrder.total);
          const newWalletAmount = currentWalletAmount + orderTotal;
          walletAmountElement.innerText = newWalletAmount.toFixed(2);
        } else {
          // Handle error if needed
          console.log("Error returning order");
        }
      },
      error: function (error) {
        console.log(error);
      },
    });
  }
</script>

<!-- ... Your HTML code ... -->

<script>
  // Function to download the invoice PDF
  function downloadInvoice(orderId) {
    const xhr = new XMLHttpRequest();
    xhr.open('GET', `/download-order/${orderId}`, true);
    xhr.responseType = 'blob'; // Set the response type to 'blob'

    xhr.onload = function () {
      if (xhr.status === 200) {
        // Create a blob URL from the response data
        const blob = new Blob([xhr.response], { type: 'application/pdf' });
        const url = window.URL.createObjectURL(blob);

        // Create a link element to trigger the download
        const link = document.createElement('a');
        link.href = url;
        link.download = `invoice_${orderId}.pdf`;
        document.body.appendChild(link);

        // Trigger the download
        link.click();

        // Remove the link element
        document.body.removeChild(link);
      } else {
        // Handle error if needed
        console.error('Error downloading invoice:', xhr.status);
      }
    };

    xhr.onerror = function () {
      // Handle error if needed
      console.error('Error downloading invoice.');
    };

    xhr.send();
  }
</script>

<!-- ... Rest of your HTML code ... -->


  <!-- Add this script to fetch and display the user's wallet balance on page load -->
<script>
  $(document).ready(function () {
    // Fetch and display the user's wallet balance
    $.ajax({
      url: "/get-wallet-balance", // Replace with your server-side endpoint to get the user's wallet balance
      type: "GET",
      dataType: "json",
      success: function (response) {
        if (response.success) {
          const walletAmountElement = document.getElementById("walletAmount");
          walletAmountElement.innerText = response.walletBalance.toFixed(2);
          
          
          // Update the displayed wallet amount with 2 decimal places
        } else {
          console.log("Error fetching wallet balance");
        }
      },
      error: function (error) {
        console.log(error);
      },
    });
  });
  $.ajax({
      url: "/get-wallet-history", // Replace with your server-side endpoint to get the user's wallet history
      type: "GET",
      dataType: "json",
      success: function (response) {
        if (response.success) {
          const walletHistoryData = response.walletHistory;
          const walletHistoryTableBody = document.getElementById("walletHistoryTableBody");

          // Clear any existing rows in the table body
          walletHistoryTableBody.innerHTML = "";

          // Loop through the wallet history data and create table rows dynamically
          walletHistoryData.forEach((historyItem) => {
            // Create a new row element
            const row = document.createElement("tr");

            // Create a cell for the date and add it to the row
            const dateCell = document.createElement("td");
const rawDate = historyItem.date;

const options = { day: '2-digit', month: '2-digit', year: 'numeric' };
const formattedDate = new Date(rawDate).toLocaleDateString(undefined, options);

dateCell.textContent = formattedDate;
row.appendChild(dateCell);


            // Create a cell for the amount and add it to the row
            const amountCell = document.createElement("td");
            amountCell.textContent = historyItem.peramount.toFixed(2);
            row.appendChild(amountCell);

            // Add the row to the table body
            walletHistoryTableBody.appendChild(row);
          });
        } else {
          console.log("Error fetching wallet history");
        }
      },
      error: function (error) {
        console.log(error);
      },
    });


  
</script>

<style>
  /* Additional styling */
.truncate {
  max-width: 150px; /* Adjust the width as needed */
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

        .wallet-amount-box {
            border: 1px #ccc;
            padding: 20px;
            border-radius: 5px;
        }
        .wallet-history{
          border: 1px #ccc;
            padding: 20px;
            border-radius: 5px;

        }
   
/* Additional styling */
.address-container {
    border: 1px solid #ccc; /* Add your desired border color here */
    padding: 15px;
    margin-bottom: 10px;
    border-radius: 5px; /* Optional: Add border radius for rounded corners */
}


</style>
<script>
  function printPage() {
    var printContent = document.getElementById("print-content").innerHTML;
    var originalContent = document.body.innerHTML;
    document.body.innerHTML = printContent;
    window.print();
    document.body.innerHTML = originalContent;
  }
</script>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script>
  <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
  <script type="text/javascript">
    function changeStatus(status, index) {
      document.getElementById('statusDropdown' + index).innerHTML = status;
    }
  </script>
</body>

</html>
